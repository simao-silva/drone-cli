name: image build and push

on:
  push:
    branches:
      - 'main'

env:
  IMAGE_NAME: "simaofsilva/drone-cli"
  CLI_VERSION: "v1.4.0"

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    env:
      ARCH: amd64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/${{ env.ARCH }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.CLI_VERSION }}-linux-${{ env.ARCH }}
          file: Dockerfile
          build-args: |
            VERSION=${{ env.CLI_VERSION }}
            ARCH=${{ env.ARCH }}


  build-arm32v6:
    runs-on: ubuntu-latest
    env:
      ARCH: arm
      VARIANT: v6
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm/${{ env.VARIANT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.CLI_VERSION }}-linux-${{ env.ARCH }}32${{ env.VARIANT }}
          file: Dockerfile
          build-args: |
            VERSION=${{ env.CLI_VERSION }}
            ARCH=${{ env.ARCH }}


  build-arm32v7:
    runs-on: ubuntu-latest
    env:
      ARCH: arm
      VARIANT: v7
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm/${{ env.VARIANT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.CLI_VERSION }}-linux-${{ env.ARCH }}32${{ env.VARIANT }}
          file: Dockerfile
          build-args: |
            VERSION=${{ env.CLI_VERSION }}
            ARCH=${{ env.ARCH }}


  build-arm64:
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      VARIANT: v8
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2    

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/${{ env.ARCH }}/${{ env.VARIANT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.CLI_VERSION }}-linux-${{ env.ARCH }}
            ${{ env.IMAGE_NAME }}:${{ env.CLI_VERSION }}-linux-${{ env.ARCH }}${{ env.VARIANT }}
          file: Dockerfile
          build-args: |
            VERSION=${{ env.CLI_VERSION }}
            ARCH=${{ env.ARCH }}

